<style>
    .tab {
        color: #7b7b7b;
        position: fixed;
        bottom: 0;
        height: 100rpx;
        width: 100%;
        border-top: 1px solid #dad9d6;
        background-color: #f7f7f7;
        font-size: 24rpx;
        white-space: nowrap;
    }
    .tab .tab_item {
        display: inline-block;
        width: 25%;
        text-align: center;
    }
    .tab .tab_item .icon {
        width: 60rpx;
        height: 60rpx;
        display: block;
        margin: auto;
    }
    .tab .tab_item .title {
        padding-top: 6rpx;
        display: block;
    }
</style>
<template>
    <view class="tab">
        <view class="tab_item tab_here{{active == 0 ? ' active' : ''}}" @tap="change(0)">
            <image class="icon" src="../images/contact{{active == 0 ? '_active' : ''}}.png"></image>
            <text class="title">HERE</text>
        </view>
        <view class="tab_item tab_position{{active == 1 ? ' active' : ''}}" @tap="change(1)">
            <image class="icon" src="../images/discovery{{active == 1 ? '_active' : ''}}.png"></image>
            <text class="title">WHERE</text>
        </view>
        <!--
        <view class="tab_item tab_contact{{active == 1 ? ' active' : ''}}" @tap="change(1)">
            <image class="icon" src="../images/contact{{active == 1 ? '_active' : ''}}.png"></image>
            <text class="title">通讯录</text>
        </view>
        -->
        <view class="tab_item tab_discovery{{active == 2 ? ' active' : ''}}" @tap="change(2)">
            <image class="icon" src="../images/message{{active == 2 ? '_active' : ''}}.png"></image>
            <text class="title">YOHO</text>
        </view>
        <view class="tab_item tab_me{{active == 3 ? ' active' : ''}}" @tap="change(3)">
            <image class="icon" src="../images/me{{active == 3 ? '_active' : ''}}.png"></image>
            <text class="title">我</text>
        </view>
    </view>
</template>
<script>
    import wepy from 'wepy';

    export default class Tab extends wepy.component {

        props = {
            active: {
                twoWay: true
            }
        };
        data = {
        };

        methods = {
            change (idx, evt) {
                // console.log('change: ', idx, this.$invoke);
                switch (idx) {
                    case '0':
                        // console.log('this.$invoke: here---loadData', evt, this);
                        this.$invoke('../here', 'loadData');     
                        this.$invoke('../here', 'pullGlobalData');     
                        this.$invoke('../here', 'toGo');            
                        break;
                    case '1':
                        // console.log('this.$invoke: here---doGoStop', evt, this);
                        this.$invoke('../here', 'pushGlobalData');     
                        this.$invoke('../here', 'toStop');
                        break;
                    case '2':
                        
                        break;
                    case '3':
                        
                        break;                
                    default:
                        break;
                }
                this.active = +idx;
            }
        };

        onLoad () {
        }
    }
</script>
